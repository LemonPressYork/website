{"version":3,"file":"component---src-pages-print-issues-tsx-5a8491b7d1d2f84059e0.js","mappings":"6NAEaA,GAAKC,EAAAA,EAAAA,IAAO,KAAM,CAC7BC,SAAU,KACVC,WAAY,QACZC,WAAY,QACZC,MAAO,QACPC,OAAQ,EACRC,aAAc,OAGHC,GAAKP,EAAAA,EAAAA,IAAO,KAAM,CAC7BC,SAAU,KACVC,WAAY,QACZC,WAAY,QACZC,MAAO,QACPC,OAAQ,EACRC,aAAc,OAGHE,GAAKR,EAAAA,EAAAA,IAAO,KAAM,CAC7BC,SAAU,KACVC,WAAY,QACZC,WAAY,QACZC,MAAO,QACPC,OAAQ,EACRC,aAAc,Q,gGCrBVG,GAAUT,EAAAA,EAAAA,IAAO,MAAO,CAC5BU,QAAS,OACTC,cAAe,SACfC,WAAY,SACZP,OAAQ,SAGJQ,GAAUb,EAAAA,EAAAA,IAAO,MAAO,CAC5Bc,SAAU,QACVC,MAAO,OACPC,UAAW,SAGPC,GAAQjB,EAAAA,EAAAA,IAAOkB,EAAAA,EAAU,CAC7BC,eAAgB,OAChBC,UAAW,SACXnB,SAAU,KACVC,WAAY,QACZC,WAAY,QACZC,MAAO,QACPY,UAAW,OACXV,aAAc,QAGVe,GAAOrB,EAAAA,EAAAA,IAAOsB,EAAAA,EAAM,CACxBN,UAAW,QAGAO,EAAiB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACnD,OACE,gBAAClB,EAAD,KACE,gBAAC,IAAD,CAAcmB,GAAID,GAChB,gBAACd,EAAD,CAASgB,IAAKH,KAEhB,gBAACT,EAAD,CAAOW,GAAID,GAAOH,GAClB,gBAACH,EAAD,KAAOI,M,qGC9BPK,GAAe9B,EAAAA,EAAAA,IAAO,MAAO,CACjCU,QAAS,OACTqB,oBAAqB,2CAGjBC,GAAWhC,EAAAA,EAAAA,IAAOQ,EAAAA,GAAI,CAC1BN,WAAY,cAGR+B,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAiCF,UA9BoB,SAAC,GAId,IAFUC,EAEX,EAHJC,KACEC,UAAaF,MAGf,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKV,MAAM,iBACX,gBAAC,IAAD,CAAWa,IAAK,CAAEC,WAAY,OAC5B,gBAAC,EAAAvC,GAAD,CAAIwC,MAAO,CAAEC,WAAY,SAAzB,gBACA,gBAACR,EAAD,CAAUO,MAAO,CAAEC,WAAY,SAA/B,8CAGA,gBAACV,EAAD,CAAcS,MAAO,CAAEC,WAAY,SAChCN,EAAMO,KAAI,SAACC,GACV,IAAMjB,EAAO,IAAIJ,KAAKqB,EAAMC,KAAKC,OACjC,OACE,gBAAC,IAAD,CACEpB,MAAOkB,EAAMC,KAAKnB,MAClBC,KAASQ,EAAWR,EAAKoB,YAArB,IAAoCpB,EAAKqB,cAC7CnB,KAAI,wCAA0Ce,EAAMC,KAAKI,QACzDrB,MAAK,2BAA6BgB,EAAMC,KAAKK,WAAxC","sources":["webpack://lemon-press-website/./src/components/Heading/index.tsx","webpack://lemon-press-website/./src/components/PrintIssues/PrintIssueCard.tsx","webpack://lemon-press-website/./src/pages/print-issues.tsx"],"sourcesContent":["import { styled } from \"../../stitches.config\";\n\nexport const H1 = styled(\"h1\", {\n  fontSize: \"$4\",\n  fontWeight: \"$bold\",\n  fontFamily: \"$sans\",\n  color: \"$text\",\n  margin: 0,\n  marginBottom: \"$1\",\n});\n\nexport const H2 = styled(\"h2\", {\n  fontSize: \"$3\",\n  fontWeight: \"$bold\",\n  fontFamily: \"$sans\",\n  color: \"$text\",\n  margin: 0,\n  marginBottom: \"$1\",\n});\n\nexport const H3 = styled(\"h3\", {\n  fontSize: \"$2\",\n  fontWeight: \"$bold\",\n  fontFamily: \"$sans\",\n  color: \"$text\",\n  margin: 0,\n  marginBottom: \"$1\",\n});\n","import React from \"react\";\nimport { styled } from \"../../stitches.config\";\nimport { TextLink, UnstyledLink } from \"../Link\";\nimport { Text } from \"../Text\";\n\nconst Wrapper = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  margin: \"20px\",\n});\n\nconst Preview = styled(\"img\", {\n  minWidth: \"200px\",\n  width: \"100%\",\n  marginTop: \"10px\",\n});\n\nconst Title = styled(TextLink, {\n  textDecoration: \"none\",\n  textAlign: \"center\",\n  fontSize: \"$3\",\n  fontWeight: \"$bold\",\n  fontFamily: \"$sans\",\n  color: \"$text\",\n  marginTop: \"10px\",\n  marginBottom: \"5px\",\n});\n\nconst Date = styled(Text, {\n  marginTop: \"0px\",\n});\n\nexport const PrintIssueCard = ({ title, date, image, link }) => {\n  return (\n    <Wrapper>\n      <UnstyledLink to={link}>\n        <Preview src={image} />\n      </UnstyledLink>\n      <Title to={link}>{title}</Title>\n      <Date>{date}</Date>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/Layout\";\nimport { PrintIssueCard } from \"../components/PrintIssues/PrintIssueCard\";\nimport { styled } from \"../stitches.config\";\nimport { H1, H3 } from \"../components/Heading\";\nimport { Container } from \"../components/Container\";\nimport { SEO } from \"../components/SEO\";\n\nconst IssuesHolder = styled(\"div\", {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat( auto-fit, minmax(250px, 1fr) )\",\n});\n\nconst Subtitle = styled(H3, {\n  fontWeight: \"$semibold\",\n});\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst PrintIssues = ({\n  data: {\n    allIssues: { edges },\n  },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Print Issues\" />\n      <Container css={{ paddingTop: \"$1\" }}>\n        <H1 style={{ gridColumn: \"1/-1\" }}>Print Issues</H1>\n        <Subtitle style={{ gridColumn: \"1/-1\" }}>\n          Checkout all our print issues... digitally\n        </Subtitle>\n        <IssuesHolder style={{ gridColumn: \"1/-1\" }}>\n          {edges.map((issue) => {\n            const date = new Date(issue.node.epoch);\n            return (\n              <PrintIssueCard\n                title={issue.node.title}\n                date={`${monthNames[date.getMonth()]} ${date.getFullYear()}`}\n                link={`https://issuu.com/thelemonpress/docs/${issue.node.docname}`}\n                image={`https://image.issuu.com/${issue.node.documentId}/jpg/page_1_thumb_large.jpg`}></PrintIssueCard>\n            );\n          })}\n        </IssuesHolder>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default PrintIssues;\n\nexport const pageQuery = graphql`\n  query {\n    allIssues {\n      edges {\n        node {\n          title\n          epoch\n          documentId\n          docname\n        }\n      }\n    }\n  }\n`;\n"],"names":["H1","styled","fontSize","fontWeight","fontFamily","color","margin","marginBottom","H2","H3","Wrapper","display","flexDirection","alignItems","Preview","minWidth","width","marginTop","Title","TextLink","textDecoration","textAlign","Date","Text","PrintIssueCard","title","date","image","link","to","src","IssuesHolder","gridTemplateColumns","Subtitle","monthNames","edges","data","allIssues","css","paddingTop","style","gridColumn","map","issue","node","epoch","getMonth","getFullYear","docname","documentId"],"sourceRoot":""}